//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class net15Entities : DbContext
    {
        public net15Entities()
            : base("name=net15Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<PTypes> PTypes { get; set; }
        public virtual DbSet<Types> Types { get; set; }
    
        public virtual int fenyeproc(Nullable<int> pageSize, string keyName, string tableName, Nullable<int> currentPage, ObjectParameter pages, string where)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var keyNameParameter = keyName != null ?
                new ObjectParameter("keyName", keyName) :
                new ObjectParameter("keyName", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("currentPage", currentPage) :
                new ObjectParameter("currentPage", typeof(int));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fenyeproc", pageSizeParameter, keyNameParameter, tableNameParameter, currentPageParameter, pages, whereParameter);
        }
    
        public virtual ObjectResult<test2proc_Result> test2proc(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test2proc_Result>("test2proc", nameParameter);
        }
    
        public virtual int test3proc(ObjectParameter n)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("test3proc", n);
        }
    
        public virtual ObjectResult<testProcedure_Result> testProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<testProcedure_Result>("testProcedure");
        }
    }
}
